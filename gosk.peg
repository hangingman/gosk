package main

type Parser Peg {
	s Scan
}

root <- text EOT                   / # 正しいテキスト
	text <.+> {p.s.Err(begin)} EOT / # エラー
	<.+> {p.s.Err(begin)} EOT        # エラー

# 複数行のテキスト
text <- line line*

line <- comments   EOL /
	 	blanks     EOL /
		label      EOL /
		< [^\n]+ _ EOL > {
	p.s.line++;
	p.s.lineHead = begin + 1
}

# コメント
comments <- < _ ';' [^\n]* _ > {
	p.s.line++;
	p.s.lineHead = begin + 1
	fmt.Printf("line %04d COMMENT\t%s\n", p.s.line, text)
}

# 空行
blanks <- < _ > {
	p.s.line++;
	p.s.lineHead = begin + 1
	fmt.Printf("line %04d BLANK  \t%s\n", p.s.line, text)
}

# ラベル
label <- < ident ':' _ > {
	p.s.line++;
	p.s.lineHead = begin + 1
	fmt.Printf("line %04d LABEL  \t%s\n", p.s.line, text)
}

expression <- sign term (term_op term)*                # 数式
sign	   <- [-+]? _								   # 符号
term_op	   <- [-+] _								   # 項の演算子
term	   <- factor (factor_op factor)*			   # 項
factor_op  <- [*/] _								   # 因数の演算子
factor	   <- ident / number / '(' _ expression ')' _  # 因数
ident	   <- [a-zA-Z] [a-zA-Z0-9]* _				   # 変数
number	   <- [0-9]+ _								   # 即値
__		   <- ![a-zA-Z0-9_] _						   # キーワードの間の空白文字
_		   <- [ \t]*								   # 0回以上の空白文字の繰り返し
EOL		   <- '\r\n' / '\n'							   # 改行コード
EOT		   <- !.									   # テキストの終わり
